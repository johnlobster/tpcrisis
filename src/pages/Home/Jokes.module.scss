@import "../../globals/colours";
@import "../../globals/fonts";

// use variables for animation duration - easier to change
$flushTime: 2s;
$jokeHeight: 8em;
$jokeOffset: -7em ;

// ToDo everything should be centered better

// The joke stuff needs to be a fixed height so different length jokes can scroll down
// ToDo 
.jokeBox {
  background-color: $covidBackground;
}

@keyframes handleFlushAnimation {
  0%   {transform: rotate(0);}
  50%  {transform: rotate(45deg);}
  100% {transform: rotate(0);}
}

// throw away toilet paper, shrink, rotate, and move off screen
@keyframes tpDispose {
  0% {transform: scale(1) rotate(0) translate(0,0) ; opacity: 1;}
  25% {transform: scale(1.05) rotate(0) translate(0,0) ; opacity: 1;}

  100% {transform: scale(0.1) rotate(270deg) translate(0,300px) ; opacity: 0;}
}

// @keyframes tpDispose {
//   0% {transform: scale(1)  rotateX(0) rotateY(0) translate(0,0) ;}
//   100% {transform: scale(0.1)  rotateX(360deg) rotateY(180) translate(0,400px) ;}
// }

// unroll a new joke
// probably needs to use translate, start under tp picture above, then roll itself out
// try end image 
@keyframes unroll {
  0% {transform: translate(0,$jokeOffset)}
  100% {transform: translate(0,0)}
}

.title {
  font-family: $titleFont, serif;
  font-weight: bold;
  font-size: 2rem;
  letter-spacing: 0.08rem;
}

.tHandle {
  height: auto;
  width: 90%;
  
}

// toDo change pointer to arrow
.flushMe {
  padding: 0.2em;
  font-size: 2em;
  font-weight: bold;
  letter-spacing: 0.08rem;
}

.tHandleFlush {
  animation-name: handleFlushAnimation;
  animation-duration: $flushTime ;
  animation-iteration-count: 1;
  animation-timing-function: linear;

}

// ToDo - tiled background, like a toilet ....
.upperBox {
      background-color: $covidBackground;

}

// The joke container is sized to be big enough for any of the jokes
.paperBox {
  height: $jokeHeight;
}

// This container hides overflow, so that joke can scroll in
// ToDo. On mobile, height should be specific
.tpJokeBox {
  overflow: hidden;
  height: auto;
}

.tpJoke {
  padding: 1em;
  width: 60%;
  border-style: solid;
  border-radius: 5px;
  border-color: $tpJokesBorderColour;
  background-color: $tpJokesBackgroundColour ;
  box-shadow: 2px 2px $tpJokesShadowColour;

  opacity: 0;

  // unrolls as soon as enabled
  animation-name: unroll ;
  animation-delay: 0.5s;
  animation-duration: 2s ;
  animation-iteration-count: 1;
  animation-fill-mode: forward; // maintains properties of last animation frame. This is what I needed
}
// Joke animation
// Unroll
// Throw away
// - initially, just shrink to nothing, goes down off page
// Later, crumple and throw into toilet bowl (may be too hard)

.tpFlush {
  animation-name: tpDispose;
  animation-duration: $flushTime ;
  animation-iteration-count: 1;
}
